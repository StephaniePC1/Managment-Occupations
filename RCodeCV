BASICS
<- rename
cdc[1:10,6]
name i want for df <- read.csv(file.choose(), header= TRUE)
dim(df)
names(df)
Specific colomun: df$name
max(df$name)
which.max(df$name)
df[row,column] :can be just a culumn or just a row.
plot (x axis, y axis, type= "l")
plot (x=variable, y=variable): scatterplot
pie(df)
barploat(df)
to change te number of graphs that are displayed:
par(mfrow = c(3, 1)) this will be 3 rows one column
boxplot(df) - good for discrete and categorical
mean(cdc$weight) 
var(cdc$weight)
median(cdc$weight)

Categorical
table(cdc$smoke100) - counts the number of times each kind of response was given
barplot(table(cdc$smoke100))
mosaicplot(table(cdc$gender,cdc$smoke100))
mdata <- subset(cdc, cdc$gender == "m")
m_and_over30 <- subset(cdc, gender == "m" & age > 30)-and
m_or_over30 <- subset(cdc, gender == "m" | age > 30)-or
m_or_over30 <- subset(cdc, gender == 1) : that is if it is binary options

Quantitative
boxplot(cdc$height ~ cdc$gender)- The ~ character can be read versus or as a function of. So weâ€™re asking R to give us a box plots of heights where the groups are defined by gender.
hist(bmi) -histogram is good for continuous variable
hist(bmi, breaks = 50)
Normal Distribution tests
Theorhetical: 
 pnorm(q=80, mean= mean(anor$Prewt), sd=sd(anor$Prewt))
 1-pnorm(q=80, mean= mean(anor$Prewt), sd=sd(anor$Prewt))
 Empirical:
 dim(variable)/# of observations
 simulated data: sim_prewt<-rnorm (n = length(anor$Prewt), mean = mean(anor$Prewt), sd = sd(anor$Prewt))
 qqnorm(bm$BICEPS)
 qqline(bm$BICEPS)
 qqnorm(sim_biceps)
 qqline(sim_biceps)
quantile(bm$BICEPS, probs=.75)---percentiles
> getmode <- function(v) {
+     uniqv <- unique(v)
+     uniqv[which.max(tabulate(match(v, uniqv)))]
+ }
v <- c(ar$age) ...then... result <- getmode(v) ...then... print(result)
Density: hist(fdims$hgt, probability = TRUE)
lines(x = x, y = y, col = "blue")

Population Distribution and Sampling 
to create a sample of a particular sample size: samp1 <- sample(area, 50)
to create a series of random samples that have a particular sample size--this is known as looping:
sample_means50 <- rep(NA, 5000)

for(i in 1:5000){
   samp <- sample(area, 50)
   sample_means50[i] <- mean(samp)
   }
   
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
----other z scores 95%(qnorm(.95))
                   90%(qnorm(.975))
                   99%(qnorm(99.5))

lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n) 
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower_vector[1], upper_vector[1])
plot_ci(lower_vector, upper_vector, mean(population))
looping more
for(i in 1:50){
  samp <- sample(population, n) # obtain a sample of size n = 60 from the population
  samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
  samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
plot_ci(lower_vector, upper_vector, mean(population))------to get this to work I need this downloaded download.file("http://www.openintro.org/stat/data/ames.RData", destfile = "ames.RData")
load("ames.RData")
for inference you must dowload this data set: download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
comparisons: by(nc$weight, nc$habit, mean) or by(nc$weight, nc$habit, length)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0, 
+           alternative = "twosided", method = "theoretical") ----- twosided can also be greater or less
to change ci level: inference(y = nc$weeks, est = "mean", type = "ci", null = 0, 
+           alternative = "twosided", method = "theoretical", conflevel = 90)
for ci if i want a specfic order add this: , order = c("smoker","nonsmoker")
inference(y = nc$gained, x = nc$lowbirthweight, est = "mean", type = "ht", null = 0, 
+           alternative = "twosided", method = "theoretical")

